#!/usr/bin/env ruby

require "serialport"
 
#params for serial port
port_str = ARGV[0] # serial device
#baud_rate = ARGV[1].to_i || 115200
baud_rate = 9600
data_bits = 8
stop_bits = 1
parity = SerialPort::NONE

unless port_str 
  puts "usage: $0 {serial-device}"
  exit
end
  
sp = SerialPort.new(port_str, baud_rate, data_bits, stop_bits, parity)

def convertToHexString(p) 
  line = p.map { |b| sprintf("%02x",b) }.join
  return line
end

NUM_PIXELS = 30

pattern = Array.new
pattern << NUM_PIXELS.times.map { [ 0,0,0 ] }.flatten
pattern << NUM_PIXELS.times.map { [ 255,0,0 ] }.flatten
pattern << NUM_PIXELS.times.map { [ 0,255,0 ] }.flatten
pattern << NUM_PIXELS.times.map { [ 0,0,255 ] }.flatten

loopCounter = 0

#just read forever
while true do
  #pattern = ( NUM_PIXELS * 3 ).times.map { Random.rand(255) }
  data = convertToHexString(pattern[loopCounter % 4])
  ack = sp.readline()
  puts ack
  if ( ack =~ /READY/ )
    puts "writing..."
    puts 'Y' + data + 'Z'
    sp.write('Y' + data + 'Z')
  end
  loopCounter += 1;
end
sp.close

